
- logic:  partie.winner -- what if both have, say, 1010 -- one will have 1013 and the other 1009.
  write test for this scenario


----logging as cross-cutting concern:
- perhaps should be a publish/subscribe model
..where game engine publishes events that update a user interface

----ui:
- in the other direction, calls into the engine move it from state to state
  can be command line, remote, etc..

button -> begin partie
button -> start game
button -> envoie/pass
button:  play card x
some buttons will be disabled.  e.g. player 2 cannot play card x if it's not their turn
also player 2 can play only from valid cardset.

-----logging wording:
 make card placement log wording to be semantic:  "Eitan cuts with .."
  or "Johnny follows suit with .."
  or "Corinne montes with .."

 likewise, should state at end of each game "stat" such as:
  - team x wins after having committed to trefle

-----handle belote rebelote

-----play strategies:
 how to build a decent playing strategy?
 should human players plug in as a strategy?
 should Strategy be mixed in to Player with groovy traits?

 introduce a more intelligent strategy and try it out for an ai
 then setup three ai's and play with them to see how well this works out.
 or.. come up with an algorithm to teach behavior based on desired outcomes.
